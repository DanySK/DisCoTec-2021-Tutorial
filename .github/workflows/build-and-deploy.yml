name: CI
on:
  push:
    tags: '*'
    branches-ignore:
      - 'autodelivery**'
      - 'bump-**'
      - 'renovate/**'
    paths-ignore:
      - '.gitignore'
      - '.mergify.yml'
      - 'README.md'
      - 'CHANGELOG.md'
      - 'LICENSE'
  pull_request:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows, macos, ubuntu]
    runs-on: ${{ matrix.os }}-latest
    env:
      TERM: dumb
    steps:
      # Checkout the repository
      - name: Checkout
        uses: danysk/action-checkout@0.2.14
      # Install the JDK
      - uses: actions/setup-java@v4
        with:
          distribution: adopt
          java-version: 8
      - name: Configure the Windows Pagefile
        if: ${{ runner.os == 'Windows' }}
        uses: al-cheb/configure-pagefile-action@v1.3
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Check
        shell: bash
        run: ./gradlew runAll --parallel || ./gradlew runAll --parallel
      - name: Turn off the Gradle Daemon
        shell: bash
        run: ./gradlew --stop
      - name: Cleanup the Gradle cache
        if: ${{ runner.os != 'Windows' }}
        shell: bash
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
      - name: Force the Gradle cleanup on Windows
        if: ${{ runner.os == 'Windows' }}
        run: |
          Remove-Item -Force c:\Users\runneradmin\.gradle\caches\modules-2\modules-2.lock
          Remove-Item -Force c:\Users\runneradmin\.gradle\caches\modules-2\gc.properties
  ci-success:
    runs-on: ubuntu-latest
    needs:
      - build
    if: >-
      always() && (
        contains(join(needs.*.result, ','), 'failure')
        || !contains(join(needs.*.result, ','), 'cancelled')
      )
    steps:
      - name: Verify that there were no failures
        run: ${{ !contains(join(needs.*.result, ','), 'failure') }}
